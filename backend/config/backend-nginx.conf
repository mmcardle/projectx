# normally you leave this at the default of 1024
#events {
#    worker_connections 1024;
#}

# http://stackoverflow.com/q/19213510/1346257


# cf http://blog.maxcdn.com/accept-encoding-its-vary-important/
gzip_vary on;
gzip_proxied any;
gzip_types *;

error_log /dev/stdout error;
access_log /dev/stdout;

# Get real IP
real_ip_header X-Forwarded-For;
set_real_ip_from 10.0.0.0/8;

server_tokens off;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream websocket {
  server 127.0.0.1:8001;
}

upstream webapp {
  server unix:///tmp/uwsgi.sock;
}

upstream fastapi {
  server 127.0.0.1:8002;
  server unix:///tmp/uvicorn1.sock;
  server unix:///tmp/uvicorn2.sock;
  server unix:///tmp/uvicorn3.sock;
  server unix:///tmp/uvicorn4.sock;
}

# Get upstream headers or set them if they don't exist
map $upstream_http_x_frame_options $xfo {
  '' DENY;
}
map $upstream_http_strict_transport_security $sts {
  '' "max-age=31536000; includeSubDomains";
}

# Set the correct websocket connection type for the CSP header
map $http_X_Forwarded_Proto $CSP_websocket {
  default       ws:;
  "https"       wss:;
}

# Browser Detection
map $http_user_agent $browser {
  default 'unknown';
  "~(MSIE|Trident|(?!Gecko.+)Firefox|(?!AppleWebKit.+Chrome.+)Safari(?!.+Edge)|(?!AppleWebKit.+)Chrome(?!.+Edge)|(?!AppleWebKit.+Chrome.+Safari.+)Edge|AppleWebKit(?!.+Chrome|.+Safari)|Gecko(?!.+Firefox))(?: |\/)([\d\.apre]+)" '$1';
}

server {
    listen 8000 default_server;
    server_name webserver;

    include /etc/nginx/mime.types;
    include /etc/nginx/snippets/general-security-headers.conf;

    root /home/user/frontend/;
    
    # Add CSP Headers - https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
    # CSP hash generation: echo -n "CONTENT_TO_BE_HASHED" | openssl dgst -sha256 -binary | base64
    add_header X-Browser "${browser}";

    # Redirect to https when behind load balancer in production
    if ($http_X_Forwarded_Proto = "http") {
      rewrite ^ https://$host$uri permanent;
    }

    location = /ws/ {
      proxy_pass http://websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    location ~ ^\/(app|admin)(\/)? {
      uwsgi_pass      webapp;
      include         uwsgi_params;
    }

    location ~ ^\/(api)(\/)? {
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://fastapi;
    }

    location ~ ^\/(password_reset|activate)\/([\w\:\-\+\_\~\:]*)(\/)?$ {
      #alias /home/user/frontend/;
      expires 0;
      try_files $uri $uri.html $uri/ /index.html;
    }

    location ~ ^\/(login|forgot_password)(\/)?$ {
      #alias /home/user/frontend/;
      expires 0;
      try_files $uri $uri.html $uri/ /index.html;
    }

    location = / {
      #alias /home/user/frontendZZZ/;
      expires 0;
      try_files $uri $uri.html $uri/ /index.html;
    }

    location ^~ /static/ {
      access_log off;
    }

    location ^~ /site_media/static/ {
      access_log off;
      alias /var/www/site_media/static/;
    }

    location @uswgi {
      uwsgi_pass      webapp;
      include         uwsgi_params;
    }

    location = /robots.txt { return 200 "User-agent: *\nAllow: /"; access_log off; }
    # TODO static locations
    location = /favicon.ico { alias /home/user/frontend/favicon-16x16.png; access_log off; }
    location = /manifest.json { alias /home/user/frontend/manifest.json; access_log off; }

    # Prevent serving of . files
    location ~ /\.          { access_log off; log_not_found off; deny all; }
    location ~ ~$           { access_log off; log_not_found off; deny all; }
}
