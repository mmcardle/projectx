[tool.poetry.dependencies]
python = "^3.9"
Django = "^4.0.4"
django-environ = "^0.8"
django-su = "^1.0"
Twisted = {extras = ["http2", "tls"], version = "^22.1"}
uWSGI = {version = "~=2.0", platform = "linux"}
djantic = "^0.7"
fastapi = "^0.75"
python-jose = "^3.3"
psycopg2-binary = "^2.9"
django-model-utils = "^4.1"
channels = "^3.0"
asgiref = "^3.5"
channels-redis = "^3.4.0"
django-redis = "^5.0"
python-multipart = "^0.0"
marshmallow = "^3.13"
django-ratelimit = "^3.0"
pydantic = "^1.8"
async-timeout = "^4.0.2"
uvicorn = {version = "^0.17", extras = ["standard"]}
redis = "^4.2.2"

[tool.poetry.dev-dependencies]
pytest = "^7.1"
wheel = "^0.36"
pytest-django = "^4.5"
pytest-cov = "^3.0"
pytest-env = "^0.6"
pytest-mock = "^3.6"
black = "^22.3"
unify = "^0.5"
pylint = "^2.9"
pylint-django = "^2.4"
requests = "^2.26"
isort = "^5.9"
safety = "^1.10.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38']

[tool.isort]
profile = "black"
src_paths = ["backend/", "backend/tests"]

[tool.poetry]
name = "projectx"
version = "0.1.0"
description = "Projectx"
authors = []
license = "MIT"

[tool.coverage.run]
omit = ["backend/manage.py", "backend/tests/*", "backend/testing_apps/*", "backend/**/migrations/**"]

# pyproject.toml
[tool.pytest.ini_options]
minversion = "7.0"
env=[
  "D:PROJECTX_TEST_HOST=127.0.0.1",
  "D:PROJECTX_DB_HOST=127.0.0.1",
  "D:PROJECTX_REDIS_HOST=127.0.0.1",
  "SECRET_KEY=TEST_SECRET_KEY",
  "JWT_SECRET=TEST_JWT_SECRET",
  "PUBLIC_IP=@{PROJECTX_TEST_HOST}",
  "DATABASE_URL=psql://postgres:mysecretpassword@{PROJECTX_DB_HOST}:5432/postgres",
  "CACHE_URL=redis://@{PROJECTX_REDIS_HOST}:6379/0",
  "CHANNELS_REDIS_URL=redis://@{PROJECTX_REDIS_HOST}:6379/1",
]
DJANGO_SETTINGS_MODULE = "tests.test_settings"
pythonpath = ["backend", "backend/testing_apps"]
testpaths = ["backend/tests/"]
addopts = "--reuse-db --create-db --nomigrations -v -ra --cov=backend/ --cov-report=html --cov-branch --cov-report xml:coverage.xml"

[tool.pylint.MASTER]
load-plugins = "pylint_django"
django-settings-module = "projectx.settings"
disable = [
    "missing-docstring",
    "missing-module-docstring",
    "duplicate-code",
]
max-line-length = 120
init-hook = "sys.path.extend(['backend/', 'backend/testing_apps/'])"